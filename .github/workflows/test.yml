name: Dockerize and Deploy New Marketplace Front Test

on:
  push:
    branches:
      - 'test'
  workflow_dispatch:

jobs:
  dockerize:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: taqsim/test_new_marketplace_front:latest
  deploy:
    runs-on: ubuntu-latest
    needs: dockerize    

    steps:
      - name: executing remote ssh commands using keys
        id: deploy
        uses: appleboy/ssh-action@master
        with:
          command_timeout: 200m
          host: ${{ secrets.FOND_SSH_HOST }}
          username: ${{ secrets.FOND_SSH_USER }}
          key: ${{ secrets.FOND_SSH_PRIVATE_KEY }}
          port: ${{ secrets.FOND_SSH_PORT }}
          script: |
            echo "Pulling latest docker image and restarting front app..."
            docker rm --force /new_marketplace_front_test && docker rmi -f taqsim/test_new_marketplace_front:latest  && docker pull taqsim/test_new_marketplace_front:latest && docker-compose build --no-cache new_marketplace_front_test && docker-compose up -d --no-deps new_marketplace_front_test
            #sh /root/fond/fond-new-marketplace.sh

      - uses: actions/setup-ruby@v1
      - name: Send Webhook Notification
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DEV_DISCORD_WEBHOOK }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
